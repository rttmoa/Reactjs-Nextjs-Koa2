{"version":3,"file":"0.js","sources":["webpack:///./components/MarkdownRenderer.jsx"],"sourcesContent":["import MarkdownIt from 'markdown-it'\nimport { memo, useMemo } from 'react'\nimport 'github-markdown-css'\n\n\n\n\nconst md = new MarkdownIt({\n  html: true,\n  linkify: true, // 链接字符串转化为链接\n})\n\n\nfunction b64_to_utf8(str) {\n  return decodeURIComponent(escape(atob(str))) // 使用 decodeURIComponent() 对编码后的 URI 进行解码\n}\n\n// memo：只要props没有变化，就不需要渲染\nexport default memo(function MarkdownRenderer({ content, isBase64 }) {\n  const markdown = isBase64 ? b64_to_utf8(content) : content;\n  const html = useMemo(() => md.render(markdown), [markdown]);    // 依赖是 markdown\n\n  // console.log(\"MarkdownRenderer 渲染次数\") // FIXME: 仅一次\n  // console.log(\"content\", content) // 字符编码：IyBEZXNpZ25QYXR0ZXJucwoKSmF2YVNjcmlwdOiuvuiuoeaooeW8jwoKCgogICAg5bel5Y6C5qih5byP77ya5bCB6KOF5Yib5bu65a+56LGh55qE6L+H56iL77yI5bCB6KOF5Liq5oCn5Lit55qE5YWx5oCn77yJCiAgICDmir3osaHlt6Xl\n  // console.log(\"markdown\", markdown) // 输出为 markdown 格式\n  // console.log(\"html\", html) // 输出为 HTML 标签格式\n\n  \n  return (\n    <div className=\"markdown-body\">\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  )\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;A","sourceRoot":""}